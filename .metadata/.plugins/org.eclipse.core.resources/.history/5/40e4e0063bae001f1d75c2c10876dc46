package com.librarymanagement.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.HttpClientErrorException.BadRequest;

import com.librarymanagement.pojo.User;
import com.librarymanagement.service.IUserService;
import com.librarymanagement.util.JwtUtil;

@RestController
@RequestMapping("api/auth")
public class AuthController {
	@Autowired
	private IUserService userService;
	
	@Autowired
	private JwtUtil jwtUtil;
	
	@PostMapping("/register")
	public ResponseEntity<?> register(@RequestBody User user){
		if(user != null) {
		      try {
		            User registeredUser = userService.register(user);
		            return ResponseEntity.ok(registeredUser);
	        } catch (Exception e) {
	            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Registration failed: " + e.getMessage());
	        }
		}
		else {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Empty Data");
		}
	}
	
	
	@PostMapping("/login")
	public ResponseEntity<?> login(@RequestBody User loginUser){
		if(loginUser != null) {
			User user = userService.findByEmail(loginUser.getEmail());
			 if (user != null && user.getPassword().equals(loginUser.getPassword())) {
		            String token = jwtUtil.generateToken(user.getUsername(), user.getRole());
		            return ResponseEntity.ok(token);
		        }
			 else  return ResponseEntity.badRequest().body("Invalid credentials");
		}
		else {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Empty Data");
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
